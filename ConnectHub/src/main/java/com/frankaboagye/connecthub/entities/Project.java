package com.frankaboagye.connecthub.entities;
//
//import jakarta.persistence.*;
//import lombok.AllArgsConstructor;
//import lombok.Builder;
//import lombok.Data;
//import lombok.NoArgsConstructor;
//
//import java.time.LocalDate;
//import java.util.ArrayList;
//import java.util.List;
//
///**
// * The Project entity represents a project posted by a company.
// * Freelancers can apply to these projects based on their skills and experience.
// */
//@Data
//@Builder
//@AllArgsConstructor
//@NoArgsConstructor
//@Entity
public class Project {
//
//    /**
//     * The unique ID of the project.
//     * Auto-generated by the database.
//     */
//    @Id
//    @GeneratedValue(strategy = GenerationType.AUTO)
//    private Long id;
//
//    /**
//     * The company offering the job.
//     * This creates a many-to-one relationship with the Company entity.
//     */
//    @ManyToOne(optional = false)
//    @JoinColumn(name = "company_id", nullable = false) // Foreign key column in the Job table
//    private Company company;
//
//
//    /**
//     * The title of the project.
//     */
//    private String title;
//
//    /**
//     * A detailed description of the project.
//     */
//    private String description;
//
//    /**
//     * The estimated budget for the project.
//     * This indicates the financial compensation offered for completing the project.
//     */
//    private Double budget;
//
//    /**
//     * A list of required skills for the project.
//     * This helps freelancers identify if they are qualified to apply.
//     */
//    @ElementCollection
//    @CollectionTable(name = "project_skills", joinColumns = @JoinColumn(name = "project_id"))
//    @Column(name = "skill")
//    @Builder.Default
//    private List<String> skills = new ArrayList<>();
//
//    /**
//     * The deadline for project completion.
//     */
//    private LocalDate deadline;
//
//    /**
//     * The location where the project is based or if it is remote.
//     */
//    private String location;
//
//    /**
//     * The related project document, if any.
//     * This creates an optional one-to-one relationship with the ProjectDocument entity.
//     */
//    @OneToOne(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
//    @JoinColumn(name = "project_document_id", nullable = true) // Allows null to make it optional
//    private ProjectDocument projectDocument; // Optional associated project document
//
//
//    /**
//     * The date when the project was posted.
//     */
//    private LocalDate postedDate;
//
//    /**
//     * A list of required experience levels for freelancers applying to the project.
//     * This can help filter applicants based on their qualifications.
//     */
//    @ElementCollection
//    @CollectionTable(name = "project_experience_levels", joinColumns = @JoinColumn(name = "project_id"))
//    @Column(name = "experience_level")
//    @Builder.Default
//    private List<String> experienceLevels = new ArrayList<>();
}
